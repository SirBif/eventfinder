{
  "name": "any-db-pool",
  "version": "0.0.6",
  "description": "AnyDB connection pool",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": "",
  "author": "",
  "license": "BSD",
  "dependencies": {
    "generic-pool": "~2.0.2",
    "once": "~1.1.1"
  },
  "readme": "# any-db-pool - database agnostic connection pool\n\n[![Build Status](https://secure.travis-ci.org/grncdr/node-any-db.png?branch=master)](http://travis-ci.org/grncdr/node-any-db-pool)\n\n## Synopsis\n\n```javascript\nvar ConnectionPool = require('any-db-pool')\nvar mysql = require('mysql')\n\nvar adapter = {\n  createConnection: function (opts, callback) {\n    var conn = mysql.createConnection(opts, callback)\n    conn.connect(function (err) {\n      if (err) callback(err)\n      else callback(null, conn)\n    })\n    return conn\n  },\n  createQuery: mysql.createQuery\n}\n\nvar pool = new ConnectionPool(adapter, {user: 'scott', password: 'tiger'}, {\n  min: 5,\n  max: 15,\n  reset: function (conn, done) { conn.query('ROLLBACK', done) }\n})\n\n// Proxies to mysql's connection.query\nvar q = pool.query('SELECT 1', function (err, res) { })\n```\n\n## Description\n\nThis module contains a database connection pool that can be used with any\ndriver, though it is designed to integrate well with [any-db][any-db], a\nminimal database abstraction layer. If you are writing a library that needs to\nsupport multiple database backends (e.g. SQLite3 or Postgres or MySQL) then it's\nhighly encouraged that you use [any-db][any-db] and **not** this\nmodule.\n\nIf, on the other hand, you just need a connection pool for your application this\nshould work for you with very little fuss.\n\n[any-db]: http://npm.im/any-db\n\n## Why wouldn't I just use `generic-pool`?\n\n[generic-pool][gpool] is awesome, but it's *very* generic.  This is a Good Thing\nfor a library with \"generic\" in the name, but not so good for the very common\nbut slightly more specialized case of pooling stateful database connection. This\nlibrary uses `generic-pool` and simply augments it with some added niceties:\n\n* Hooks for initializing and/or resetting connection state when connections are\n\tadded to the pool.\n* A `query` method that allows queries to be performed without the user needing\n\ta reference to a connection object (and potentially leaking that reference).\n\n[gpool]: http://npm.im/generic-pool\n\n## Installation\n\n`npm install any-db-pool`\n\n## API\n\nYou can find the API documentation for this connection pool inclued in the rest of\nthe any-db API docs\n[here](https://github.com/grncdr/node-any-db/blob/master/API.md#connectionpool).\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "any-db-pool@0.0.6",
  "_from": "any-db-pool@>= 0.0.6"
}
